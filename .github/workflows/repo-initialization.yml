name: Initialize Marduk Framework Repo

on:
  workflow_dispatch: # Allows manual triggering
  push:               # Runs on every push to the repository
    branches:
      - main

jobs:
  initialize-repo:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the Repository
    - name: Checkout Repository
      uses: actions/checkout@v3

    # Step 2: Set Up Deno
    - name: Set Up Deno
      uses: denoland/setup-deno@v2
      with:
        deno-version: v1.x

    # Step 3: Create Directory Structure
    - name: Create Directory Structure
      run: |
        mkdir -p marduk-ts/core
        mkdir -p marduk-ts/subsystems
        mkdir -p marduk-ts/types
        mkdir -p marduk-ts/logs

    # Step 4: Add Initial Files
    - name: Add Initial Files
      run: |
        echo 'import { serve } from "https://deno.land/std@0.118.0/http/server.ts";' > marduk-ts/server.ts
        echo 'export interface TaskMessage {...}' > marduk-ts/types/messages.ts
        echo '{}' > marduk-ts/logs/marduk_log.json
        echo '// Core implementation' > marduk-ts/core/marduk_core.ts
        echo '// Declarative memory implementation' > marduk-ts/subsystems/declarative_memory.ts

    # Step 5: Commit Changes
    - name: Commit Changes
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add .
        git commit -m "Initial setup of Marduk framework files and structure"
        git push

    # Step 6: Verify Deno Installation
    - name: Verify Deno
      run: deno --version
